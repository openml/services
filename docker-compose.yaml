services:
  database:
    image: "mysql:8.4.3-oraclelinux9"
    container_name: "openml-database"
    env_file: config/database/.env
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./config/database/data:/db-input
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      start_period: 30s
      start_interval: 1s
      timeout: 3s
      interval: 5s
      retries: 10

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.23  # This version is not available on arm. Newer version do not play well with the PHP code. See https://github.com/openml/OpenML/tree/feature/elasticsearch8
    container_name: "openml-elasticsearch"
    ports:
      - "9200:9200"  # also known as /es (nginx)
      - "9300:9300"
    env_file: config/elasticsearch/.env
    volumes:
      - ./data/mysql:/var/lib/mysql
    healthcheck:
      test: curl 127.0.0.1:9200/_cluster/health | grep -e "green"
      start_period: 30s
      start_interval: 5s
      timeout: 3s
      interval: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 250M

  nginx:
    build:
      context: config/nginx
    volumes:
      - ./data/nginx:/etc/nginx/conf.d/:ro
      - ./data/certbot/www:/var/www/certbot/:ro
      - ./data/certbot/conf/:/etc/nginx/ssl/:ro
    container_name: openml-nginx
    ports:
      - "8000:80"
  certbot:
    profiles: [certbot] 
    image: certbot/certbot:latest
    volumes:
      - ./data/certbot/www/:/var/www/certbot/:rw
      - ./data/certbot/conf/:/etc/letsencrypt/:rw

  php-api:
    image: openml/php-rest-api:v1.0.20241115
    container_name: "openml-php-rest-api"
    ports:
      - "8080:80"  # also known as /api (nginx)
    env_file: config/php/.env
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./logs/php:/var/www/openml/logs
      - ./data/php:/var/www/data
    entrypoint: /scripts/set_configuration.sh
    healthcheck:
      test: curl 127.0.0.1:80/api/v1/json/data/1 | grep -e "data_set_description"
      start_period: 30s
      start_interval: 5s
      timeout: 3s
      interval: 1m

  frontend:
    image: openml/frontend:dev_v2.0.20241110
    container_name: "openml-frontend"
    ports:
      - "8081:5000"  # also known as / (nginx)
    env_file: config/frontend/.env
    volumes:
      - ./config/frontend/index.html:/app/server/src/client/app/build/index.html
    depends_on:
      php-api:
        condition: service_healthy

  minio:
    image: quay.io/minio/minio
    container_name: "openml-minio"
    ports:
      - "9000:9000"  # also known as /data (nginx)
      - "9001:9001"
    env_file: config/minio/.env
    command: >
      server /export --console-address ":9001"

networks: 
  default:
    name: openml-services

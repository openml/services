services:
  database:
    image: "mysql:8.4.3-oraclelinux9"
    container_name: "openml-database"
    env_file: config/database/.env
    volumes:
      - /data/openml-storage/openml/mysql:/var/lib/mysql
      - ./config/database/data:/db-input
    ports:
      - "3306:3306"
    command: --innodb-buffer-pool-size=16G
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      start_period: 30s
      start_interval: 1s
      timeout: 3s
      interval: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '3'
          memory: 32G


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.23  # This version is not available on arm. Newer version do not play well with the PHP code. See https://github.com/openml/OpenML/tree/feature/elasticsearch8
    container_name: "openml-elasticsearch"
    ports:
      - "9200:9200"  # also known as /es (nginx)
      - "9300:9300"
    env_file: config/elasticsearch/.env
    volumes:
      - /data/openml-storage/openml/mysql:/var/lib/mysql
    healthcheck:
      test: curl 127.0.0.1:9200/_cluster/health | grep -e "green"
      start_period: 30s
      start_interval: 5s
      timeout: 3s
      interval: 10s
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 64G

nginx:
    build:
      context: config/nginx
    volumes:
      - /data/openml-storage/openml/nginx/shared.conf:/etc/nginx/shared.conf
      - /data/openml-storage/openml/nginx/conf.d:/etc/nginx/conf.d
      - /data/openml-storage/openml/certbot/www:/var/www/certbot/
      - /data/openml-storage/openml/certbot/conf/:/etc/nginx/ssl/
      - ./logs/nginx:/var/log/nginx
    container_name: openml-nginx
    ports:
      - "80:80"
      - "443:443"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  certbot:
    profiles: [certbot]
    image: certbot/certbot:latest
    volumes:
      - /data/openml-storage/openml/certbot/www/:/var/www/certbot/
      - /data/openml-storage/openml/certbot/conf/:/etc/letsencrypt/

  php-api:
    image: openml/php-rest-api:v1.0.20241115
    container_name: "openml-php-rest-api"
    ports:
      - "8080:80"  # also known as /api (nginx)
    env_file: config/php/.env
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./logs/php:/var/www/openml/logs
      - /data/openml-storage/openml/php:/var/www/data
      - ./config/php/set_configuration.sh:/scripts/set_configuration.sh
    # Healthcheck (and multiple depends_on: php-api) disabled, so that it also spins up before the data is uploaded.
    #healthcheck:
      #test: curl 127.0.0.1:80/api/v1/json/data/1 | grep -e "data_set_description"
      #start_period: 30s
      #start_interval: 5s
      #timeout: 3s
      #interval: 1m
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 16G

  frontend:
    image: openml/frontend:temp_20250122
    container_name: "openml-frontend"
    ports:
      - "8081:5000"  # also known as / (nginx)
    env_file: config/frontend/.env
    #depends_on:
    #  php-api:
    #    condition: service_healthy

  minio:
    image: quay.io/minio/minio
    container_name: "openml-minio"
    ports:
      - "9000:9000"  # also known as /data (nginx)
      - "9001:9001"
    env_file: config/minio/.env
    volumes:
      - /data/openml-storage/openml/minio:/export
    command: >
      server /export --console-address ":9001"
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 64G

  evaluation-engine:
    build:
      context: config/evaluation-engine
    container_name: openml-evaluation-engine
    entrypoint: >
      /bin/bash -c "/run-cron.sh"
    env_file: config/evaluation-engine/.env
    volumes:
      - ./logs/evaluation-engine:/home/unprivileged-user/logs
    #depends_on:
    #  php-api:
    #    condition: service_healthy

networks:
  default:
    name: openml-services
